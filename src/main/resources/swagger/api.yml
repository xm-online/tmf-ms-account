---
swagger: '2.0'
info:
  title: Account Management
  description: This is Swagger UI environment generated for the TMF Account Management
    specification
  version: '2.1'
host: serverRoot
basePath: "/tmf-api/accountManagement/v2/"
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  "/partyAccount":
    get:
      operationId: listPartyAccount
      summary: List or find 'PartyAccount' objects
      tags:
      - partyAccount
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/PartyAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createPartyAccount
      summary: Creates a 'PartyAccount'
      tags:
      - partyAccount
      parameters:
      - schema:
          "$ref": "#/definitions/PartyAccount_Create"
        required: true
        in: body
        name: partyAccount
        description: The Party Account to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/PartyAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/partyAccount/{id}":
    get:
      operationId: retrievePartyAccount
      summary: Retrieves a 'PartyAccount' by Id
      tags:
      - partyAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Party Account
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/PartyAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchPartyAccount
      summary: Updates partially a 'PartyAccount' by Id
      tags:
      - partyAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Party Account
      - schema:
          "$ref": "#/definitions/PartyAccount_Update"
        required: true
        in: body
        name: partyAccount
        description: The Party Account to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/PartyAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deletePartyAccount
      summary: Deletes a 'PartyAccount' by Id
      tags:
      - partyAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Party Account
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billingAccount":
    get:
      operationId: listBillingAccount
      summary: List or find 'BillingAccount' objects
      tags:
      - billingAccount
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillingAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createBillingAccount
      summary: Creates a 'BillingAccount'
      tags:
      - billingAccount
      parameters:
      - schema:
          "$ref": "#/definitions/BillingAccount_Create"
        required: true
        in: body
        name: billingAccount
        description: The Billing Account to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/BillingAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billingAccount/{id}":
    get:
      operationId: retrieveBillingAccount
      summary: Retrieves a 'BillingAccount' by Id
      tags:
      - billingAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Billing Account
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillingAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchBillingAccount
      summary: Updates partially a 'BillingAccount' by Id
      tags:
      - billingAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Billing Account
      - schema:
          "$ref": "#/definitions/BillingAccount_Update"
        required: true
        in: body
        name: billingAccount
        description: The Billing Account to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/BillingAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deleteBillingAccount
      summary: Deletes a 'BillingAccount' by Id
      tags:
      - billingAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Billing Account
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/settlementAccount":
    get:
      operationId: listSettlementAccount
      summary: List or find 'SettlementAccount' objects
      tags:
      - settlementAccount
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/SettlementAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createSettlementAccount
      summary: Creates a 'SettlementAccount'
      tags:
      - settlementAccount
      parameters:
      - schema:
          "$ref": "#/definitions/SettlementAccount_Create"
        required: true
        in: body
        name: settlementAccount
        description: The Settlement Account to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/SettlementAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/settlementAccount/{id}":
    get:
      operationId: retrieveSettlementAccount
      summary: Retrieves a 'SettlementAccount' by Id
      tags:
      - settlementAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Settlement Account
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/SettlementAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchSettlementAccount
      summary: Updates partially a 'SettlementAccount' by Id
      tags:
      - settlementAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Settlement Account
      - schema:
          "$ref": "#/definitions/SettlementAccount_Update"
        required: true
        in: body
        name: settlementAccount
        description: The Settlement Account to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/SettlementAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deleteSettlementAccount
      summary: Deletes a 'SettlementAccount' by Id
      tags:
      - settlementAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Settlement Account
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/financialAccount":
    get:
      operationId: listFinancialAccount
      summary: List or find 'FinancialAccount' objects
      tags:
      - financialAccount
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/FinancialAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createFinancialAccount
      summary: Creates a 'FinancialAccount'
      tags:
      - financialAccount
      parameters:
      - schema:
          "$ref": "#/definitions/FinancialAccount_Create"
        required: true
        in: body
        name: financialAccount
        description: The Financial Account to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/FinancialAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/financialAccount/{id}":
    get:
      operationId: retrieveFinancialAccount
      summary: Retrieves a 'FinancialAccount' by Id
      tags:
      - financialAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Financial Account
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/FinancialAccount"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchFinancialAccount
      summary: Updates partially a 'FinancialAccount' by Id
      tags:
      - financialAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Financial Account
      - schema:
          "$ref": "#/definitions/FinancialAccount_Update"
        required: true
        in: body
        name: financialAccount
        description: The Financial Account to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/FinancialAccount"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deleteFinancialAccount
      summary: Deletes a 'FinancialAccount' by Id
      tags:
      - financialAccount
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Financial Account
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billingCycleSpecification":
    get:
      operationId: listBillingCycleSpecification
      summary: List or find 'BillingCycleSpecification' objects
      tags:
      - billingCycleSpecification
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillingCycleSpecification"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createBillingCycleSpecification
      summary: Creates a 'BillingCycleSpecification'
      tags:
      - billingCycleSpecification
      parameters:
      - schema:
          "$ref": "#/definitions/BillingCycleSpecification_Create"
        required: true
        in: body
        name: billingCycleSpecification
        description: The Billing Cycle Specification to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/BillingCycleSpecification"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billingCycleSpecification/{id}":
    get:
      operationId: retrieveBillingCycleSpecification
      summary: Retrieves a 'BillingCycleSpecification' by Id
      tags:
      - billingCycleSpecification
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Billing Cycle Specification
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillingCycleSpecification"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchBillingCycleSpecification
      summary: Updates partially a 'BillingCycleSpecification' by Id
      tags:
      - billingCycleSpecification
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Billing Cycle Specification
      - schema:
          "$ref": "#/definitions/BillingCycleSpecification_Update"
        required: true
        in: body
        name: billingCycleSpecification
        description: The Billing Cycle Specification to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/BillingCycleSpecification"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deleteBillingCycleSpecification
      summary: Deletes a 'BillingCycleSpecification' by Id
      tags:
      - billingCycleSpecification
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Billing Cycle Specification
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billFormat":
    get:
      operationId: listBillFormat
      summary: List or find 'BillFormat' objects
      tags:
      - billFormat
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillFormat"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createBillFormat
      summary: Creates a 'BillFormat'
      tags:
      - billFormat
      parameters:
      - schema:
          "$ref": "#/definitions/BillFormat_Create"
        required: true
        in: body
        name: billFormat
        description: The Bill Format to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/BillFormat"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billFormat/{id}":
    get:
      operationId: retrieveBillFormat
      summary: Retrieves a 'BillFormat' by Id
      tags:
      - billFormat
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Bill Format
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillFormat"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchBillFormat
      summary: Updates partially a 'BillFormat' by Id
      tags:
      - billFormat
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Bill Format
      - schema:
          "$ref": "#/definitions/BillFormat_Update"
        required: true
        in: body
        name: billFormat
        description: The Bill Format to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/BillFormat"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deleteBillFormat
      summary: Deletes a 'BillFormat' by Id
      tags:
      - billFormat
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Bill Format
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billPresentationMedia":
    get:
      operationId: listBillPresentationMedia
      summary: List or find 'BillPresentationMedia' objects
      tags:
      - billPresentationMedia
      parameters:
      - type: string
        required: false
        in: query
        name: fields
        description: Comma separated properties to display in response
      - type: integer
        required: false
        in: query
        name: offset
        description: Requested index for start of resources to be provided in response
      - type: integer
        required: false
        in: query
        name: limit
        description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillPresentationMedia"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    post:
      operationId: createBillPresentationMedia
      summary: Creates a 'BillPresentationMedia'
      tags:
      - billPresentationMedia
      parameters:
      - schema:
          "$ref": "#/definitions/BillPresentationMedia_Create"
        required: true
        in: body
        name: billPresentationMedia
        description: The Bill Presentation Media to be created
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/BillPresentationMedia"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/billPresentationMedia/{id}":
    get:
      operationId: retrieveBillPresentationMedia
      summary: Retrieves a 'BillPresentationMedia' by Id
      tags:
      - billPresentationMedia
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Bill Presentation Media
      responses:
        '200':
          description: Ok
          schema:
            items:
              "$ref": "#/definitions/BillPresentationMedia"
            type: array
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    patch:
      operationId: patchBillPresentationMedia
      summary: Updates partially a 'BillPresentationMedia' by Id
      tags:
      - billPresentationMedia
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Bill Presentation Media
      - schema:
          "$ref": "#/definitions/BillPresentationMedia_Update"
        required: true
        in: body
        name: billPresentationMedia
        description: The Bill Presentation Media to be updated
      responses:
        '200':
          description: Updated
          schema:
            "$ref": "#/definitions/BillPresentationMedia"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
    delete:
      operationId: deleteBillPresentationMedia
      summary: Deletes a 'BillPresentationMedia' by Id
      tags:
      - billPresentationMedia
      parameters:
      - required: true
        type: string
        name: id
        in: path
        description: Identifier of the Bill Presentation Media
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/hub":
    post:
      operationId: registerListener
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must
        use to deliver information about its health state, execution state, failures
        and metrics.
      tags:
      - events subscription
      parameters:
      - name: data
        schema:
          "$ref": "#/definitions/EventSubscriptionInput"
        required: true
        in: body
        description: Data containing the callback endpoint to deliver the information
      responses:
        '201':
          description: Subscribed
          schema:
            "$ref": "#/definitions/EventSubscription"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method Not allowed
          schema:
            "$ref": "#/definitions/Error"
        '409':
          description: Conflict
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
  "/hub/{id}":
    delete:
      operationId: unregisterListener
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance
        must use to deliver information about its health state, execution state, failures
        and metrics.
      tags:
      - events subscription
      parameters:
      - name: id
        type: string
        required: true
        in: path
        description: The id of the registered listener
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad request
          schema:
            "$ref": "#/definitions/Error"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/Error"
        '403':
          description: Forbidden
          schema:
            "$ref": "#/definitions/Error"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/Error"
        '405':
          description: Method not allowed
          schema:
            "$ref": "#/definitions/Error"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/Error"
definitions:
  FinancialAccount:
    type: object
    description: An account of money owed by a party to another entity in exchange
      for goods or services that have been delivered or used. A financial (account
      receivable account/account payable) aggregates the amounts of one or more party
      accounts (billing or settlement) owned by a given party.
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      href:
        type: string
        description: Unique reference of the account
      id:
        type: string
        description: Unique identifier of the account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  FinancialAccount_Create:
    type: object
    description: |-
      An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.
      Skipped properties: id,href
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  FinancialAccount_Update:
    type: object
    description: |-
      An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.
      Skipped properties: id,href,id,href,lastModified
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  BillingCycleSpecification:
    type: object
    description: A detailed description of when to initiate a billing cycle and the
      various sub steps of a billing cycle.
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      billingDateShift:
        type: integer
        description: An offset of a billing/settlement date. The offset is expressed
          as number of days with regard to the start of the billing/settlement period.
      billingPeriod:
        type: string
        description: 'A billing time period. It can be recurring, for example: week,
          month, quarter of year, year .'
      chargeDateOffset:
        type: integer
        description: An offset of a date through which charges previously received
          by the billing system will appear on the bill. The offset is expressed as
          number of days with regard to the start of the BillingPeriod.
      creditDateOffset:
        type: integer
        description: An offset of a date through which credits previously received
          by the billing system will appear on the bill. The offset is expressed as
          number of days with regard to the start of the BillingPeriod.
      description:
        type: string
        description: An explanation regarding this billing cycle specification
      frequency:
        type: string
        description: Frequency of the billing cycle (monthly for instance)
      href:
        type: string
        description: Reference of the billing cycle specification
      id:
        type: string
        description: Unique identifier of the billing cycle specification
      mailingDateOffset:
        type: integer
        description: An offset of a customer bill mailing date. The offset is expressed
          as number of days with regard to the start of the BillingPeriod.
      name:
        type: string
        description: A short descriptive name
      paymentDueDateOffset:
        type: integer
        description: An offset of a payment due date. The offset is expressed as number
          of days with regard to the start of the BillingPeriod.
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the billing specification cycle is valid
  BillingCycleSpecification_Create:
    type: object
    description: |-
      A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.
      Skipped properties: id,href
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      billingDateShift:
        type: integer
        description: An offset of a billing/settlement date. The offset is expressed
          as number of days with regard to the start of the billing/settlement period.
      billingPeriod:
        type: string
        description: 'A billing time period. It can be recurring, for example: week,
          month, quarter of year, year .'
      chargeDateOffset:
        type: integer
        description: An offset of a date through which charges previously received
          by the billing system will appear on the bill. The offset is expressed as
          number of days with regard to the start of the BillingPeriod.
      creditDateOffset:
        type: integer
        description: An offset of a date through which credits previously received
          by the billing system will appear on the bill. The offset is expressed as
          number of days with regard to the start of the BillingPeriod.
      description:
        type: string
        description: An explanation regarding this billing cycle specification
      frequency:
        type: string
        description: Frequency of the billing cycle (monthly for instance)
      mailingDateOffset:
        type: integer
        description: An offset of a customer bill mailing date. The offset is expressed
          as number of days with regard to the start of the BillingPeriod.
      name:
        type: string
        description: A short descriptive name
      paymentDueDateOffset:
        type: integer
        description: An offset of a payment due date. The offset is expressed as number
          of days with regard to the start of the BillingPeriod.
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the billing specification cycle is valid
  BillingCycleSpecification_Update:
    type: object
    description: |-
      A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.
      Skipped properties: id,href,id,href
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      billingDateShift:
        type: integer
        description: An offset of a billing/settlement date. The offset is expressed
          as number of days with regard to the start of the billing/settlement period.
      billingPeriod:
        type: string
        description: 'A billing time period. It can be recurring, for example: week,
          month, quarter of year, year .'
      chargeDateOffset:
        type: integer
        description: An offset of a date through which charges previously received
          by the billing system will appear on the bill. The offset is expressed as
          number of days with regard to the start of the BillingPeriod.
      creditDateOffset:
        type: integer
        description: An offset of a date through which credits previously received
          by the billing system will appear on the bill. The offset is expressed as
          number of days with regard to the start of the BillingPeriod.
      description:
        type: string
        description: An explanation regarding this billing cycle specification
      frequency:
        type: string
        description: Frequency of the billing cycle (monthly for instance)
      mailingDateOffset:
        type: integer
        description: An offset of a customer bill mailing date. The offset is expressed
          as number of days with regard to the start of the BillingPeriod.
      name:
        type: string
        description: A short descriptive name
      paymentDueDateOffset:
        type: integer
        description: An offset of a payment due date. The offset is expressed as number
          of days with regard to the start of the BillingPeriod.
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the billing specification cycle is valid
  BillFormat:
    type: object
    description: A detailed description of the way in which a bill is presented.
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      description:
        type: string
        description: An explanatory text for this bill format
      href:
        type: string
        description: Reference of the bill format
      id:
        type: string
        description: Unique identifier of the bill format
      name:
        type: string
        description: A short descriptive name
  BillFormat_Create:
    type: object
    description: |-
      A detailed description of the way in which a bill is presented.
      Skipped properties: id,href
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      description:
        type: string
        description: An explanatory text for this bill format
      name:
        type: string
        description: A short descriptive name
  BillFormat_Update:
    type: object
    description: |-
      A detailed description of the way in which a bill is presented.
      Skipped properties: id,href,id,href
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      description:
        type: string
        description: An explanatory text for this bill format
      name:
        type: string
        description: A short descriptive name
  BillPresentationMedia:
    type: object
    description: A mean of communicating a bill, supported by the associated bill
      format. For example, post mail, email, web page.
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      description:
        type: string
        description: An explanatory text describing this bill presentation media
      href:
        type: string
        description: Reference of the bill presentation media
      id:
        type: string
        description: Unique identifier of the bill presentation media
      name:
        type: string
        description: A short descriptive name
  BillPresentationMedia_Create:
    type: object
    description: |-
      A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.
      Skipped properties: id,href
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      description:
        type: string
        description: An explanatory text describing this bill presentation media
      name:
        type: string
        description: A short descriptive name
  BillPresentationMedia_Update:
    type: object
    description: |-
      A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.
      Skipped properties: id,href,id,href
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      description:
        type: string
        description: An explanatory text describing this bill presentation media
      name:
        type: string
        description: A short descriptive name
  PartyAccount:
    type: object
    description: Account used for billing or for settlement purposes concerning a
      given party (an organization or an individual).
    required:
    - name
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      href:
        type: string
        description: Unique reference of the account
      id:
        type: string
        description: Unique identifier of the account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  PartyAccount_Create:
    type: object
    description: |-
      Account used for billing or for settlement purposes concerning a given party (an organization or an individual).
      Skipped properties: id,href
    required:
    - name
    - relatedParty
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  PartyAccount_Update:
    type: object
    description: |-
      Account used for billing or for settlement purposes concerning a given party (an organization or an individual).
      Skipped properties: id,href,id,href,accountBalance
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  BillingAccount:
    type: object
    description: A party account used for billing purposes. It includes a description
      of the bill structure (frequency, presentation media, format and so on).
    required:
    - name
    - relatedParty
    properties:
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      href:
        type: string
        description: Unique reference of the account
      id:
        type: string
        description: Unique identifier of the account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  BillingAccount_Create:
    type: object
    description: |-
      A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).
      Skipped properties: id,href
    required:
    - name
    - relatedParty
    properties:
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  BillingAccount_Update:
    type: object
    description: |-
      A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).
      Skipped properties: id,href,id,href,accountBalance
    properties:
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  SettlementAccount:
    type: object
    description: A party account used for settlement purposes. It includes a description
      of the structure used for the settlement (frequency, presentation media, format
      and so on).
    required:
    - name
    - relatedParty
    properties:
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      href:
        type: string
        description: Unique reference of the account
      id:
        type: string
        description: Unique identifier of the account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  SettlementAccount_Create:
    type: object
    description: |-
      A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).
      Skipped properties: id,href
    required:
    - name
    - relatedParty
    properties:
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountBalance:
        type: array
        items:
          "$ref": "#/definitions/AccountBalance"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  SettlementAccount_Update:
    type: object
    description: |-
      A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).
      Skipped properties: id,href,id,href,accountBalance
    properties:
      paymentStatus:
        type: string
        description: The condition of the account, such as due, paid, in arrears.
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      creditLimit:
        "$ref": "#/definitions/Money"
        description: The maximum amount of money that may be charged on an account
      description:
        type: string
        description: Detailed description of the party account
      lastModified:
        type: string
        format: date-time
        description: Date of last modification of the account
      name:
        type: string
        description: Name of the account
      state:
        type: string
        description: 'Contains the lifecycle state such as: Active, Closed, Suspended
          and so on.'
      type:
        type: string
        description: 'A categorization of an account, such as individual, joint, and
          so forth, whose instances share some of the same characteristics. Note:
          for flexibility we use a String here but an implementation may use an enumeration
          with a limited list of valid values.'
      billStructure:
        "$ref": "#/definitions/BillStructure"
      paymentPlan:
        type: array
        items:
          "$ref": "#/definitions/PaymentPlan"
      financialAccount:
        "$ref": "#/definitions/FinancialAccountRef"
      defaultPaymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
      taxExemption:
        type: array
        items:
          "$ref": "#/definitions/AccountTaxExemption"
      contact:
        type: array
        items:
          "$ref": "#/definitions/Contact"
      accountRelationship:
        type: array
        items:
          "$ref": "#/definitions/AccountRelationship"
  Money:
    type: object
    description: A base / value business entity used to represent money
    properties:
      unit:
        type: string
        description: Currency (ISO4217 norm uses 3 letters to define the currency)
      value:
        type: number
        format: float
        description: A positive floating point number
  RelatedPartyRef:
    type: object
    description: RelatedParty reference. A related party defines party or party role
      linked to a specific entity.
    required:
    - id
    - name
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      href:
        type: string
        description: Reference of the related party, could be a party reference or
          a party role reference
      id:
        type: string
        description: Unique identifier of a related party
      name:
        type: string
        description: Name of the related party
      role:
        type: string
        description: Role of the related party.
  AccountTaxExemption:
    type: object
    description: Proof of freedom from taxes imposed by a taxing jurisdiction
    required:
    - issuingJurisdiction
    - validFor
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      certificateNumber:
        type: string
        description: Identifier of a document that shows proof of exemption from taxes
          for the taxing jurisdiction
      issuingJurisdiction:
        type: string
        description: Name of the taxing jurisdiction for which taxes are exempt
      reason:
        type: string
        description: Reason of the tax exemption
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: Period for which the exemption is valid
  Contact:
    type: object
    description: An individual or an organization used as a contact point for a given
      account and accessed via some contact medium.
    required:
    - contactType
    - validFor
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      contactName:
        type: string
        description: A displayable name for that contact
      contactType:
        type: string
        description: Type of contact (primary, secondary...)
      partyRoleType:
        type: string
        description: Identifies what kind of party role type is linked to the contact
          (a account manager...)
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: Validity period of that contact
      contactMedium:
        type: array
        items:
          "$ref": "#/definitions/ContactMedium"
      relatedParty:
        "$ref": "#/definitions/RelatedPartyRef"
  AccountBalance:
    type: object
    description: Balances linked to the account
    required:
    - type
    - amount
    - validFor
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      amount:
        "$ref": "#/definitions/Money"
        description: Balance amount
      type:
        type: string
        description: 'Type of the balance : deposit balance, disputed balance, loyalty
          balance, receivable balance...'
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: Balance validity period
  AccountRelationship:
    type: object
    description: Significant connection between accounts. For instance an aggregating
      account for a list of shop branches each having its own billing account.
    required:
    - relationshipType
    - validFor
    properties:
      relationshipType:
        type: string
        description: Type of relationship
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: Validity period of that relationship
      account:
        "$ref": "#/definitions/AccountRef"
  TimePeriod:
    type: object
    description: A base / value business entity used to represent a period of time
      between two timepoints.
    properties:
      endDateTime:
        type: string
        format: date-time
        description: An instant of time, ending at the TimePeriod.
      startDateTime:
        type: string
        format: date-time
        description: An instant of time, starting at the TimePeriod
  ContactMedium:
    type: object
    description: Indicates the contact medium that could be used to contact the party.
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      preferred:
        type: boolean
        description: If true, indicates that is the preferred contact medium
      type:
        type: string
        description: 'Type of the contact medium, such as: email address, telephone
          number, postal address'
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The time period that the contact medium is valid for
      characteristic:
        "$ref": "#/definitions/MediumCharacteristic"
  MediumCharacteristic:
    type: object
    description: Describes the contact medium characteristics that could be used to
      contact a party (an individual or an organization)
    properties:
      city:
        type: string
        description: The city
      country:
        type: string
        description: The country
      emailAddress:
        type: string
        description: Full email address in standard format
      faxNumber:
        type: string
        description: The fax number of the contact
      phoneNumber:
        type: string
        description: The primary phone number of the contact
      postCode:
        type: string
        description: Postcode
      stateOrProvince:
        type: string
        description: State or province
      street1:
        type: string
        description: Describes the street
      street2:
        type: string
        description: Complementary street description
      type:
        type: string
        description: Type of medium (fax, mobile phone...)
  AccountRef:
    type: object
    description: Account reference. A account may be a party account or a financial
      account.
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      description:
        type: string
        description: Detailed description of the account
      href:
        type: string
        description: Reference of the account
      id:
        type: string
        description: Unique identifier of the account
      name:
        type: string
        description: Name of the account
  BillStructure:
    type: object
    description: The structure of the bill for party accounts (billling or settlement).
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      presentationMedia:
        type: array
        items:
          "$ref": "#/definitions/BillPresentationMediaRef"
      format:
        "$ref": "#/definitions/BillFormatRef"
      cycleSpecification:
        "$ref": "#/definitions/BillingCycleSpecificationRef"
  PaymentPlan:
    type: object
    description: Defines a plan for payment (when a party wants to spread his payments)
    properties:
      "baseType":
        type: string
        description: Generic attribute indicating the base class type of the extension
          class of the current object. Useful only when the class type of the current  object
          is unknown to the implementation.
      "schemaLocation":
        type: string
        description: Generic attribute containing the link to the schema that defines
          the structure of the class type of the current object.
      "type":
        type: string
        description: Generic attribute containing the name of the resource class type
      numberOfPayments:
        type: integer
        description: Number of payments used to spread the global payment
      paymentFrequency:
        type: string
        description: Frequency of the payments, such as monthly and bimonthly
      priority:
        type: integer
        description: Priority of the payment plan
      status:
        type: string
        description: Status of the payment plan (effective, ineffective)
      totalAmount:
        "$ref": "#/definitions/Money"
        description: Amount paid
      type:
        type: string
        description: Type of payment plan
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: Validity period of the payment plan
      paymentMethod:
        "$ref": "#/definitions/PaymentMethodRef"
  FinancialAccountRef:
    type: object
    description: AccountReceivable reference. An account of money owed by a party
      to another entity in exchange for goods or services that have been delivered
      or used. An account receivable aggregates the amounts of one or more party accounts
      (billing or settlement) owned by a given party.
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      href:
        type: string
        description: Unique reference of the account
      id:
        type: string
        description: Unique identifier of the account
      name:
        type: string
        description: Name of the account
      accountBalance:
        "$ref": "#/definitions/AccountBalance"
  PaymentMethodRef:
    type: object
    description: PaymentMethod reference. A payment method defines a specific mean
      of payment (e.g direct debit).
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      href:
        type: string
        description: Reference of the payment mean
      id:
        type: string
        description: Unique identifier of the payment mean
      name:
        type: string
        description: Name of the payment mean
  BillPresentationMediaRef:
    type: object
    description: PresentationMedia reference. A mean of communicating a bill, supported
      by the associated bill format. For example, post mail, email, web page.
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      href:
        type: string
        description: Reference of the bill presentation media
      id:
        type: string
        description: Unique identifier of the bill presentation media
      name:
        type: string
        description: A short descriptive name
  BillFormatRef:
    type: object
    description: BillFormat reference. A bill format is a description of the way in
      which a bill is presented.
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      href:
        type: string
        description: Reference of the bill format
      id:
        type: string
        description: Unique identifier of the bill format
      name:
        type: string
        description: A short descriptive name
  BillingCycleSpecificationRef:
    type: object
    description: BillingCycleSpecification reference. A description of when to initiate
      a billing cycle and the various sub steps of a billing cycle.
    properties:
      "referredType":
        type: string
        description: Generic attribute indicating the name of the class type of the
          referred resource entity.
      dateShift:
        type: integer
        description: An offset of a billing/settlement date. The offset is expressed
          as number of days with regard to the start of the billing/settlement period.
      frequency:
        type: string
        description: Frequency of the billing cycle (monthly for instance)
      href:
        type: string
        description: Reference of the billing cycle specification
      id:
        type: string
        description: Unique identifier of the billing cycle specification
      name:
        type: string
        description: A short descriptive name
  EventSubscription:
    required:
    - id
    - callback
    properties:
      id:
        type: string
        description: Id of the listener
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: additional data to be passed
  EventSubscriptionInput:
    required:
    - callback
    properties:
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: additional data to be passed
  Error:
    required:
    - code
    - reason
    properties:
      code:
        type: integer
        description: Application related code.
      reason:
        type: integer
        description: Text that explains the reason for error.
      message:
        type: string
        description: "(optional) Text that provide more details and corrective actions
          related to the error."
      status:
        type: integer
        description: "(optional) http error code extension like 400-2"
      referenceError:
        type: string
        description: "(optional) A URL to online documentation that provides more
          information about the error."
      "type":
        type: string
        description: "(optional) The class type of a REST resource."
      "schemaLocation":
        type: string
        description: "(optional) A link to the schema describing a REST resource."
  EntitySpecification:
    type: object
    description: EntitySpecification is a class that offers characteristics to describe
      a type of entity. Entities are generic constructs that may be used to describe
      bespoke business entities that are not effectively covered by the existing SID
      model.
    properties:
      id:
        type: string
        description: Unique identifier of this REST resource
      href:
        type: string
        description: Hyperlink reference to this REST resource
      name:
        type: string
        description: Name given to this REST resource
      description:
        type: string
        description: Description of this REST resource
      "type":
        type: string
        description: Class type of this REST resource
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: The (immediate) base class type of this REST resource
      version:
        type: string
        description: Entity specification version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this REST resource is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update of this REST resource
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status of this catalog
          item
      attachment:
        type: array
        items:
          "$ref": "#/definitions/Attachment"
      entitySchema:
        "$ref": "#/definitions/EntitySchemaRef"
      specCharacteristic:
        type: array
        items:
          "$ref": "#/definitions/SpecCharacteristic"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
  EntitySpecification_Create:
    type: object
    description: |-
      EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.
      Skipped properties: id,href
    properties:
      name:
        type: string
        description: Name given to this REST resource
      description:
        type: string
        description: Description of this REST resource
      "type":
        type: string
        description: Class type of this REST resource
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: The (immediate) base class type of this REST resource
      version:
        type: string
        description: Entity specification version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this REST resource is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update of this REST resource
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status of this catalog
          item
      attachment:
        type: array
        items:
          "$ref": "#/definitions/Attachment"
      entitySchema:
        "$ref": "#/definitions/EntitySchemaRef"
      specCharacteristic:
        type: array
        items:
          "$ref": "#/definitions/SpecCharacteristic"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
  EntitySpecification_Update:
    type: object
    description: |-
      EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.
      Skipped properties: id,href,id,href,lastUpdate,type
    properties:
      name:
        type: string
        description: Name given to this REST resource
      description:
        type: string
        description: Description of this REST resource
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: The (immediate) base class type of this REST resource
      version:
        type: string
        description: Entity specification version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this REST resource is valid
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status of this catalog
          item
      attachment:
        type: array
        items:
          "$ref": "#/definitions/Attachment"
      entitySchema:
        "$ref": "#/definitions/EntitySchemaRef"
      specCharacteristic:
        type: array
        items:
          "$ref": "#/definitions/SpecCharacteristic"
      relatedParty:
        type: array
        items:
          "$ref": "#/definitions/RelatedPartyRef"
  AssociationSpecification:
    type: object
    description: AssociationSpecification is an association class that describes a
      type of relationship between two entities. This is a generic construct that
      may be used to describe relationship types and roles. The role and type of each
      entity in the relationship is given by an association role specification. Two
      role specifications are embedded in the association specification.
    properties:
      id:
        type: string
        description: unique identifier of the association specification
      href:
        type: string
        description: Hyperlink reference to this specification
      name:
        type: string
        description: Name given to this association specification
      description:
        type: string
        description: Description of the specification
      "type":
        type: string
        description: The (class) type of this association specification
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Immediate base class type of this association specification
      version:
        type: string
        description: Version of this association
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this specification is valid
      lastUpdate:
        type: string
        format: date-time
        description: The last modified date of this specification
      lifecycleStatus:
        type: string
        description: Indicates the current lifecycle status
      constraint:
        type: array
        items:
          "$ref": "#/definitions/ConstraintRef"
      associationRoleSpec:
        type: array
        items:
          "$ref": "#/definitions/AssociationRoleSpec"
  AssociationSpecification_Create:
    type: object
    description: |-
      AssociationSpecification is an association class that describes a type of relationship between two entities. This is a generic construct that may be used to describe relationship types and roles. The role and type of each entity in the relationship is given by an association role specification. Two role specifications are embedded in the association specification.
      Skipped properties: id,href
    properties:
      name:
        type: string
        description: Name given to this association specification
      description:
        type: string
        description: Description of the specification
      "type":
        type: string
        description: The (class) type of this association specification
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Immediate base class type of this association specification
      version:
        type: string
        description: Version of this association
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this specification is valid
      lastUpdate:
        type: string
        format: date-time
        description: The last modified date of this specification
      lifecycleStatus:
        type: string
        description: Indicates the current lifecycle status
      constraint:
        type: array
        items:
          "$ref": "#/definitions/ConstraintRef"
      associationRoleSpec:
        type: array
        items:
          "$ref": "#/definitions/AssociationRoleSpec"
  AssociationSpecification_Update:
    type: object
    description: |-
      AssociationSpecification is an association class that describes a type of relationship between two entities. This is a generic construct that may be used to describe relationship types and roles. The role and type of each entity in the relationship is given by an association role specification. Two role specifications are embedded in the association specification.
      Skipped properties: id,href,id,href
    properties:
      name:
        type: string
        description: Name given to this association specification
      description:
        type: string
        description: Description of the specification
      "type":
        type: string
        description: The (class) type of this association specification
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Immediate base class type of this association specification
      version:
        type: string
        description: Version of this association
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this specification is valid
      lastUpdate:
        type: string
        format: date-time
        description: The last modified date of this specification
      lifecycleStatus:
        type: string
        description: Indicates the current lifecycle status
      constraint:
        type: array
        items:
          "$ref": "#/definitions/ConstraintRef"
      associationRoleSpec:
        type: array
        items:
          "$ref": "#/definitions/AssociationRoleSpec"
  Category:
    type: object
    description: The category resource is used to group product offerings, service
      and resource candidates in logical containers. Categories can contain other
      categories and/or product offerings, resource or service candidates.
    properties:
      id:
        type: string
        description: Unique identifier of the category
      href:
        type: string
        description: Reference of the catalog
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update
      version:
        type: string
        description: Category version
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the category is valid
      parentId:
        type: string
        description: Unique identifier of the parent category
      isRoot:
        type: boolean
        description: If true, this Boolean indicates that the category is a root of
          categories
      name:
        type: string
        description: Name of the category
      description:
        type: string
        description: Description of the category
  Category_Create:
    type: object
    description: |-
      The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.
      Skipped properties: id,href
    properties:
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update
      version:
        type: string
        description: Category version
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the category is valid
      parentId:
        type: string
        description: Unique identifier of the parent category
      isRoot:
        type: boolean
        description: If true, this Boolean indicates that the category is a root of
          categories
      name:
        type: string
        description: Name of the category
      description:
        type: string
        description: Description of the category
  Category_Update:
    type: object
    description: |-
      The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.
      Skipped properties: id,href,id,href
    properties:
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update
      version:
        type: string
        description: Category version
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the category is valid
      parentId:
        type: string
        description: Unique identifier of the parent category
      isRoot:
        type: boolean
        description: If true, this Boolean indicates that the category is a root of
          categories
      name:
        type: string
        description: Name of the category
      description:
        type: string
        description: Description of the category
  EntityCatalogItem:
    type: object
    description: |-
      An EntityCatalogItem is an entity that allows any ProductOffering, ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity, to be available to a catalog. The CatalogSpecification and Policy of the catalog governs the content of the EntityCatalogItem. This API addresses only EntitySpecification items extended from RootEntity as EntityCatalogItem.
      The EntityCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the EntityCatalogItem.
    properties:
      id:
        type: string
        description: Unique identifier of this REST resource
      href:
        type: string
        description: Hyperlink reference to this REST resource
      name:
        type: string
        description: Name given to this REST resource
      description:
        type: string
        description: Description of this REST resource
      "type":
        type: string
        description: Class type of this REST resource
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: The (immediate) base class type of this REST resource
      version:
        type: string
        description: EntityCatalogItem version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this REST resource is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update of this REST resource
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status of this catalog
          item
  EntityCatalogItem_Create:
    type: object
    description: |-
      An EntityCatalogItem is an entity that allows any ProductOffering, ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity, to be available to a catalog. The CatalogSpecification and Policy of the catalog governs the content of the EntityCatalogItem. This API addresses only EntitySpecification items extended from RootEntity as EntityCatalogItem.
      The EntityCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the EntityCatalogItem.
      Skipped properties: id,href
    properties:
      name:
        type: string
        description: Name given to this REST resource
      description:
        type: string
        description: Description of this REST resource
      "type":
        type: string
        description: Class type of this REST resource
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: The (immediate) base class type of this REST resource
      version:
        type: string
        description: EntityCatalogItem version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this REST resource is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update of this REST resource
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status of this catalog
          item
  EntityCatalogItem_Update:
    type: object
    description: |-
      An EntityCatalogItem is an entity that allows any ProductOffering, ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity, to be available to a catalog. The CatalogSpecification and Policy of the catalog governs the content of the EntityCatalogItem. This API addresses only EntitySpecification items extended from RootEntity as EntityCatalogItem.
      The EntityCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the EntityCatalogItem.
      Skipped properties: id,href,id,href
    properties:
      name:
        type: string
        description: Name given to this REST resource
      description:
        type: string
        description: Description of this REST resource
      "type":
        type: string
        description: Class type of this REST resource
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: The (immediate) base class type of this REST resource
      version:
        type: string
        description: EntityCatalogItem version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this REST resource is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update of this REST resource
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status of this catalog
          item
  Association:
    type: object
    description: Association is the class that describe a relationship between two
      or more entity specifications based on a given association specification. The
      role and type of each endpoint in the relationship is given by an association
      role. The type of endpoints in the relationship should match the ones as defined
      in the corresponding association role specification. A relationship between
      entity specifications may be governed by conditions and rules which are addressed
      by constraint references in this resource. Constraints for a relationship may
      include new rules and conditions in addition to those defined for the corresponding
      association specification
    properties:
      id:
        type: string
        description: unique identifier of the association
      href:
        type: string
        description: Hyperlink reference to this association
      name:
        type: string
        description: Name given to this association
      description:
        type: string
        description: Description of the association
      "type":
        type: string
        description: The (class) type of this association
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Immediate base class type of this association
      version:
        type: string
        description: Version of this REST resource
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this association is valid
      lastUpdate:
        type: string
        format: date-time
        description: The last modified date of this association object
      lifecycleStatus:
        type: string
        description: Indicates the current lifecycle status
      associationSpec:
        "$ref": "#/definitions/AssociationSpecRef"
      associationRole:
        type: array
        items:
          "$ref": "#/definitions/AssociationRole"
      constraint:
        type: array
        items:
          "$ref": "#/definitions/ConstraintRef"
  Association_Create:
    type: object
    description: |-
      Association is the class that describe a relationship between two or more entity specifications based on a given association specification. The role and type of each endpoint in the relationship is given by an association role. The type of endpoints in the relationship should match the ones as defined in the corresponding association role specification. A relationship between entity specifications may be governed by conditions and rules which are addressed by constraint references in this resource. Constraints for a relationship may include new rules and conditions in addition to those defined for the corresponding association specification
      Skipped properties: id,href
    properties:
      name:
        type: string
        description: Name given to this association
      description:
        type: string
        description: Description of the association
      "type":
        type: string
        description: The (class) type of this association
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Immediate base class type of this association
      version:
        type: string
        description: Version of this REST resource
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this association is valid
      lastUpdate:
        type: string
        format: date-time
        description: The last modified date of this association object
      lifecycleStatus:
        type: string
        description: Indicates the current lifecycle status
      associationSpec:
        "$ref": "#/definitions/AssociationSpecRef"
      associationRole:
        type: array
        items:
          "$ref": "#/definitions/AssociationRole"
      constraint:
        type: array
        items:
          "$ref": "#/definitions/ConstraintRef"
  Association_Update:
    type: object
    description: |-
      Association is the class that describe a relationship between two or more entity specifications based on a given association specification. The role and type of each endpoint in the relationship is given by an association role. The type of endpoints in the relationship should match the ones as defined in the corresponding association role specification. A relationship between entity specifications may be governed by conditions and rules which are addressed by constraint references in this resource. Constraints for a relationship may include new rules and conditions in addition to those defined for the corresponding association specification
      Skipped properties: id,href,id,href
    properties:
      name:
        type: string
        description: Name given to this association
      description:
        type: string
        description: Description of the association
      "type":
        type: string
        description: The (class) type of this association
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Immediate base class type of this association
      version:
        type: string
        description: Version of this REST resource
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this association is valid
      lastUpdate:
        type: string
        format: date-time
        description: The last modified date of this association object
      lifecycleStatus:
        type: string
        description: Indicates the current lifecycle status
      associationSpec:
        "$ref": "#/definitions/AssociationSpecRef"
      associationRole:
        type: array
        items:
          "$ref": "#/definitions/AssociationRole"
      constraint:
        type: array
        items:
          "$ref": "#/definitions/ConstraintRef"
  Catalog:
    type: object
    description: |-
      The root entity for entity catalog management. An entity catalog can be defined as a collection of entity catalog items and arranging them in a particular manner based on the need.
      In comparison to Product, Service and Resource catalogs, the entity catalog is intended for the purpose of providing any SID entity to consumers via a catalog, with its specification and policy providing governance over its content. Even Entity catalog may have an overlap with Product, Service or Resource catalog, it doesn't replace them. It is primarily intended to address those SID entities which may not be addressed by any of Product, Service or Resource catalog.
      An entity catalog comprises of a list of RootEntities made available through EntityCatalogItems. This API addresses only RootEntity extended items as EntitySpecification. An entity catalog typically includes name, description and time period that it is valid for.
    properties:
      id:
        type: string
        description: Unique identifier of the Catalog
      href:
        type: string
        description: Unique reference of the catalog
      name:
        type: string
        description: Name of the catalog
      description:
        type: string
        description: Description of this catalog
      "type":
        type: string
        description: Indicates the (class) type of catalog. For entity catalogs, this
          will be 'EntityCatalog'.
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Indicates<b> </b>the base (class) type of this REST resource
      version:
        type: string
        description: Catalog version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the catalog is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status
  Catalog_Create:
    type: object
    description: |-
      The root entity for entity catalog management. An entity catalog can be defined as a collection of entity catalog items and arranging them in a particular manner based on the need.
      In comparison to Product, Service and Resource catalogs, the entity catalog is intended for the purpose of providing any SID entity to consumers via a catalog, with its specification and policy providing governance over its content. Even Entity catalog may have an overlap with Product, Service or Resource catalog, it doesn't replace them. It is primarily intended to address those SID entities which may not be addressed by any of Product, Service or Resource catalog.
      An entity catalog comprises of a list of RootEntities made available through EntityCatalogItems. This API addresses only RootEntity extended items as EntitySpecification. An entity catalog typically includes name, description and time period that it is valid for.
      Skipped properties: id,href
    properties:
      name:
        type: string
        description: Name of the catalog
      description:
        type: string
        description: Description of this catalog
      "type":
        type: string
        description: Indicates the (class) type of catalog. For entity catalogs, this
          will be 'EntityCatalog'.
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Indicates<b> </b>the base (class) type of this REST resource
      version:
        type: string
        description: Catalog version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the catalog is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status
  Catalog_Update:
    type: object
    description: |-
      The root entity for entity catalog management. An entity catalog can be defined as a collection of entity catalog items and arranging them in a particular manner based on the need.
      In comparison to Product, Service and Resource catalogs, the entity catalog is intended for the purpose of providing any SID entity to consumers via a catalog, with its specification and policy providing governance over its content. Even Entity catalog may have an overlap with Product, Service or Resource catalog, it doesn't replace them. It is primarily intended to address those SID entities which may not be addressed by any of Product, Service or Resource catalog.
      An entity catalog comprises of a list of RootEntities made available through EntityCatalogItems. This API addresses only RootEntity extended items as EntitySpecification. An entity catalog typically includes name, description and time period that it is valid for.
      Skipped properties: id,href,id,href
    properties:
      name:
        type: string
        description: Name of the catalog
      description:
        type: string
        description: Description of this catalog
      "type":
        type: string
        description: Indicates the (class) type of catalog. For entity catalogs, this
          will be 'EntityCatalog'.
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing this REST
          resource
      "baseType":
        type: string
        description: Indicates<b> </b>the base (class) type of this REST resource
      version:
        type: string
        description: Catalog version
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the catalog is valid
      lastUpdate:
        type: string
        format: date-time
        description: Date and time of the last update
      lifecycleStatus:
        type: string
        description: Used to indicate the current lifecycle status
  TimePeriod:
    type: object
    description: A base / value business entity used to represent a period of time
      between two timepoints.
    properties:
      startDateTime:
        type: string
        format: date-time
        description: An instant of time, starting at the TimePeriod
      endDateTime:
        type: string
        format: date-time
        description: An instant of time, ending at the TimePeriod.
  Attachment:
    type: object
    description: Complements the description of an element (for instance a product)
      through video, pictures...
    properties:
      description:
        type: string
        description: A narrative text describing the content of the attachment
      href:
        type: string
        description: Reference of the attachment
      id:
        type: string
        description: Unique identifier of the attachment
      type:
        type: string
        description: Attachment type such as video, picture
      url:
        type: string
        description: Uniform Resource Locator, is a web page address (a subset of
          URI)
  EntitySchemaRef:
    type: object
    description: The reference object to the schema and type of target entity which
      is described by an entity specification
    properties:
      "type":
        type: string
        description: Class type of the target entity
      "schemaLocation":
        type: string
        description: This field provides a link to the schema describing the target
          entity
  SpecCharacteristic:
    type: object
    description: A characteristic quality or distinctive feature of a Specification.  The
      characteristic can be take on a discrete value, such as color, can take on a
      range of values, (for example, sensitivity of 100-240 mV), or can be derived
      from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain
      characteristics, such as color, may be configured during the ordering or some
      other process.
    properties:
      name:
        type: string
        description: Name of the SpecCharacteristic
      description:
        type: string
        description: A narrative that explains in detail what the SpecCharacteristic
          is
      valueType:
        type: string
        description: A kind of value that the characteristic can take on, such as
          numeric, text and so forth
      configurable:
        type: boolean
        description: If true, the Boolean indicates that the SpecCharacteristic is
          configurable
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which the productSpecCharacteristic is valid
      "type":
        type: string
        description: "(Class) type of the characteristic"
      "schemaLocation":
        type: string
        description: A link to the schema describing this characteristic
      specCharacteristicValue:
        type: array
        items:
          "$ref": "#/definitions/SpecCharacteristicValue"
  RelatedPartyRef:
    type: object
    description: RelatedParty reference. A related party defines party or party role
      linked to a specific entity.
    properties:
      id:
        type: string
        description: Unique identifier of a related party
      href:
        type: string
        description: Reference of the related party, could be a party reference or
          a party role reference
      role:
        type: string
        description: Role of the related party.
      name:
        type: string
        description: Name of the related party
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: Validity period of the related party
  SpecCharacteristicValue:
    type: object
    description: A number or text that can be assigned to a SpecCharacteristic
    properties:
      valueType:
        type: string
        description: A kind of value that the characteristic value can take on, such
          as numeric, text and so forth
      isDefault:
        type: boolean
        description: If true, the Boolean Indicates if the value is the default value
          for a characteristic
      value:
        type: object
        description: the  value that the characteristic can take on.
      unitOfMeasure:
        type: string
        description: unit of measure for the valueCould be minutes, GB, etc
      validFor:
        "$ref": "#/definitions/TimePeriod"
        description: The period for which this object is valid
      valueFrom:
        type: integer
        description: The low range value that a characteristic can take on
      valueTo:
        type: integer
        description: The upper range value that a characteristic can take on
      rangeInterval:
        type: string
        description: An indicator that specifies the inclusion or exclusion of the
          valueFrom and valueTo attributes. If applicable, possible values are "open",
          "closed", "closedBottom" and "closedTop".
      regex:
        type: string
        description: A regular expression constraint for given value
  ConstraintRef:
    type: object
    description: Constraint reference. The Constraint resource represents a policy/rule
      applied to an entity or entity spec.
    properties:
      id:
        type: string
        description: reference id to the target constraint
      href:
        type: string
        description: Hyperlink reference to the target constraint
      version:
        type: string
        description: constraint version
      name:
        type: string
        description: Name given to the constraint
      "type":
        type: string
        description: The (class) type of the constraint
  AssociationRoleSpec:
    type: object
    description: This embedded object represents the role and type of each entity
      involved in a relationship.
    properties:
      role:
        type: string
      isSource:
        type: boolean
      aggregation:
        type: string
      minQuantity:
        type: integer
      maxQuantity:
        type: integer
      defaulQuantity:
        type: integer
      isNavigable:
        type: boolean
      entityType:
        type: string
  AssociationSpecRef:
    type: object
    description: reference to an AssociationSpecification object
    properties:
      id:
        type: string
        description: reference id to the target AssociationSpecification
      href:
        type: string
        description: Hyperlink reference to the target AssociationSpecification
      "type":
        type: string
        description: The (class) type of the AssociationSpecification
  AssociationRole:
    type: object
    description: This embedded object represents the role and type of each entity
      involved in a relationship.
    properties:
      role:
        type: string
        description: The association role of this relationship participant as defined
          in the associationRoleSpec
      isSource:
        type: boolean
        description: A flag indicating if the participant involved in a uni-directional
          relationship is the source or not. this flag is true If the association
          is bi-directional (both end points are navigable)
      id:
        type: string
        description: The identifier of the endpoint plays this role
      href:
        type: string
        description: Hyperlink reference to the endpoint plays this association role
      name:
        type: string
        description: Name of the endpoint which plays this association role
      "type":
        type: string
        description: "(class) type of the endpoint which plays this association role"
  EventSubscription:
    required:
    - id
    - callback
    properties:
      id:
        type: string
        description: Id of the listener
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: additional data to be passed
  EventSubscriptionInput:
    required:
    - callback
    properties:
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: additional data to be passed
